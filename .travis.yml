# Travis script that uses miniconda in place of the system installed python
# versions.  Allows substantial flexibility for choosing versions of
# required packages and is simpler to use to test up-to-date scientific Python
# stack
dist: trusty
sudo: required
language: python

env:
  # Default values for common packages, override as needed
  global:
    - OPTIONAL=
    - COVERAGE=false
    - USEMPL=true
    - USENUMPYBASE=false
    - MATPLOTLIB=
    - DOCBUILD=false
    - LINT=false
    - MKL_NUM_THREADS=1 # Enforce single thread
    - NUMEXPR_NUM_THREADS=1
    - OMP_NUM_THREADS=1
    - OPENBLAS_NUM_THREADS=1
    - PYTHONHASHSEED=0 # Ensure tests are correctly gathered by xdist
    - BLAS="mkl blas=*=mkl" # Use Intel MKL by default

matrix:
  fast_finish: true
  include:
  # Python 3.7 + cutting edge packages
  - python: 2.7
    env:
    - PYTHON=3.7
    - COVERAGE=true
  # Python 3.6 + cutting edge packages
  - python: 2.7
    env:
    - PYTHON=3.6
    - BLAS="nomkl blas=*=openblas"
  # Python 2.7 + partially updated numpy, mpl; cutting edge scipy, pandas
  - python: 2.7
    env:
    - PYTHON=2.7
    - NUMPY=1.13
    - MATPLOTLIB=2.0
    - COVERAGE=true
  # Python 3.5 + partially updated packages
  - python: 2.7
    env:
    - PYTHON=3.5
    - NUMPY=1.13
    - SCIPY=1.0
    - PANDAS=0.22
    - MATPLOTLIB=2.0
    - LINT=true
  # Python 2.7 + baseline packages
  - python: 2.7
    env:
    - PYTHON=2.7
    - NUMPY=1.11
    - USENUMPYBASE=true
    - BLAS= # Do not specify blas in this config due to conflict
    - SCIPY=0.18
    - PANDAS=0.19
    - MATPLOTLIB=1.5
  # Python 3.4 + baseline packages
  - python: 2.7
    env:
    - PYTHON=3.4
    - NUMPY=1.11
    - SCIPY=0.18
    - PANDAS=0.19
    - MATPLOTLIB=1.5
  # Documentation build (on Python 3.6 + cutting edge packages)
  - python: 2.7
    env:
    - PYTHON=3.6
    # (can't use pandas=0.23 with pandas-datareader <= 0.6)
    - PANDAS=0.22
    - DOCBUILD=true
  # No Matplotlib (on Python 2.7 + baseline packages)
  - python: 2.7
    env:
    - PYTHON=2.7
    - NUMPY=1.12
    - SCIPY=0.18
    - PANDAS=0.19
    - USEMPL=false
    - LINT=true


notifications:
  email:
    on_success: always

# Setup anaconda
before_install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p /home/travis/miniconda
  - export PATH=/home/travis/miniconda/bin:$PATH
  - conda config --set always_yes yes
  - conda update --quiet conda
  # Fix for headless TravisCI
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  # Avoid noise from matplotlib
  - mkdir -p $HOME/.config/matplotlib
  - SRCDIR=$PWD
  # Build package list to avoid empty package=versions; only needed for versioned packages
  - PKGS="numpy"; if [ ${NUMPY} ]; then PKGS="${PKGS}=${NUMPY}"; fi
  - if [ ${USENUMPYBASE} = true ]; then PKGS="${PKGS} numpy-base=${NUMPY}"; fi
  - PKGS="${PKGS} scipy"; if [ ${SCIPY} ]; then PKGS="${PKGS}=${SCIPY}"; fi
  - PKGS="${PKGS} patsy"; if [ ${PATSY} ]; then PKGS="${PKGS}=${PATSY}"; fi
  - PKGS="${PKGS} pandas"; if [ ${PANDAS} ]; then PKGS="${PKGS}=${PANDAS}"; fi
  # - PKGS="${PKGS} Cython"; if [ ${CYTHON} ]; then PKGS="${PKGS}=${CYTHON}"; fi
  - if [ ${USEMPL} = true ]; then PKGS="${PKGS} matplotlib"; if [ ${MATPLOTLIB} ]; then PKGS="${PKGS}=${MATPLOTLIB}"; fi; fi
  - if [ ${COVERAGE} = true ]; then export COVERAGE_OPTS=" --cov-config=.travis_coveragerc --cov=statsmodels "; else export COVERAGE_OPTS=""; fi
  - echo conda create --yes --quiet -n statsmodels-test python=${PYTHON} ${BLAS} ${PKGS} ${OPTIONAL} pyyaml joblib
  - conda create --yes --quiet -n statsmodels-test python=${PYTHON} ${BLAS} ${PKGS} ${OPTIONAL} pyyaml joblib
  - source activate statsmodels-test
  - if [ ${COVERAGE} = true ]; then pip install coverage coveralls; fi
  - pip install --install-option="--no-cython-compile" https://github.com/cython/cython/archive/d902b7cf24eba5bc5be9e8001d639abd912adf6d.zip
  - pip install 'pytest<4' pytest-xdist nose
  - if [ ${COVERAGE} = true ]; then pip install codecov coverage coveralls pytest-cov; fi
  - if [ ${DOCBUILD} = true ]; then bash tools/ci_docbuild_install.sh; fi;
  - pip install flake8
  - export SRCDIR=$PWD

# Install packages
install:
  - python setup.py build_ext --inplace
  - python setup.py develop

script:
  # Show versions
  - python -c 'import statsmodels.api as sm; sm.show_versions();'
  # docbuild and exit, if required
  - if [ ${DOCBUILD} = true ]; then cd ${SRCDIR}/docs; bash ${SRCDIR}/tools/ci_docbuild.sh; exit 0; fi;
  # Run tests
  - echo pytest -r a ${COVERAGE_OPTS} statsmodels --skip-examples
  - pytest -r a ${COVERAGE_OPTS} statsmodels --skip-examples
  - ./lint.sh

after_success:
  - if [ ${COVERAGE} = true ]; then coveralls --rcfile=${SRCDIR}/.travis_coveragerc; fi
  - if [ ${COVERAGE} = true ]; then codecov; fi
